@using Flowbite.Components
@using System.ComponentModel.DataAnnotations

<Card Size="CardSize.ExtraLarge" class="shadow-sm">
    <div class="mb-4">
        <h3 class="text-xl font-semibold">Password information</h3>
    </div>
    <EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <div class="grid grid-cols-6 gap-6">
            <div class="col-span-6 sm:col-span-3">
                <Label For="current-password" Value="Current password" class="mb-2 block" />
                <TextInput TValue="string"
                          Id="current-password"
                          Type="password"
                          @bind-Value="@Model.CurrentPassword"
                          Placeholder="••••••••" />
                <ValidationMessage For="@(() => Model.CurrentPassword)" />
            </div>
            <div class="col-span-6 sm:col-span-3"></div>
            <div class="col-span-6 sm:col-span-3">
                <Label For="new-password" Value="New password" class="mb-2 block" />
                <TextInput TValue="string"
                          Id="new-password"
                          Type="password"
                          @bind-Value="@Model.NewPassword"
                          Placeholder="••••••••" />
                <ValidationMessage For="@(() => Model.NewPassword)" />
            </div>
            <div class="col-span-6 sm:col-span-3">
                <Label For="confirm-password" Value="Confirm password" class="mb-2 block" />
                <TextInput TValue="string"
                          Id="confirm-password"
                          Type="password"
                          @bind-Value="@Model.ConfirmPassword"
                          Placeholder="••••••••" />
                <ValidationMessage For="@(() => Model.ConfirmPassword)" />
            </div>
            <div class="col-span-6 sm:col-full">
                <Button Type="ButtonType.Submit">Save all</Button>
            </div>
        </div>
    </EditForm>
</Card>

@code {
    [Parameter]
    public EventCallback<PasswordChangeModel> OnSubmit { get; set; }

    private PasswordChangeModel Model { get; set; } = new();

    private async Task HandleSubmit()
    {
        await OnSubmit.InvokeAsync(Model);
        Model = new(); // Reset form
    }

    public class PasswordChangeModel
    {
        [Required]
        [MinLength(8, ErrorMessage = "Password must be at least 8 characters")]
        public string CurrentPassword { get; set; } = "";

        [Required]
        [MinLength(8, ErrorMessage = "Password must be at least 8 characters")]
        public string NewPassword { get; set; } = "";

        [Required]
        [Compare(nameof(NewPassword), ErrorMessage = "Passwords do not match")]
        public string ConfirmPassword { get; set; } = "";
    }
}
